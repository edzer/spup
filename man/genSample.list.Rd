% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genSample.list.R
\name{genSample.list}
\alias{genSample.list}
\title{Generating Monte Carlo sample from a list of uncertain objects that are cross-correlated
and described by joint PDF or a list from independent objects using LHS method.}
\usage{
genSample(UMobject, varcov, n, samplemethod, p = 0, ...)
}
\arguments{
\item{UMobject}{uncertain object defined using defineUM() or a list of scalars
that are means of the normal marginal distributions.}

\item{n}{Integer. Number of Monte Carlo realizations.}

\item{samplemethod}{"ugs" for spatially cross-correlated errors, "mvt" for joint PDF of 
non-spatial variables, "lhs" if no correlation of errors is considered (can be used
for spatial and non-spatial variables).}

\item{p}{A vector of quantiles. Optional. Only required if sample method is "lhs".}

\item{...}{Additional parameters that may be passed, e.g. in
the "ugs" method. See examples.}

\item{varcov}{variance-covariance matrix; in use only if sampling joint PDF of 
non-spatial variables (scalars). Default is diag(ncol(x)).}
}
\value{
A Monte Carlo sample of the variables of interest. If asList = TRUE returns
list of all samples as lists.
}
\description{
\strong{"ugs"} Unconditional gaussian simulation of spatially
cross-correlated errors.
}
\details{
\strong{"mvt"} Sampling multivariate distribution using eigenvalue decomposition
(based on 'mvtnorm' package).

\strong{"lhs"} Sampling method for at least two uncertain inputs. The
uncertain.object is then a list of two or more. It uses startified sampling
method to generate the inputs for the latin hypercude algorithm, hence number of samples (n)
must be dividable by the number of quantiles to assure each quantile is evenly represented.
}
\examples{

# "ugs" method example
# load data
data(Madagascar)

OC_crm <- makecrm(acf0 = 0.6, range = 1000, model = "Sph")
OC_UM <- defineUM(TRUE, distribution = "norm", distr_param = c(OC, OC_sd),
id = "OC", cross_ids = "TN")
class(OC_UM)

TN_crm <- makecrm(acf0 = 0.4, range = 1000, model = "Sph")
TN_UM <- defineUM(TRUE, distribution = "norm", distr_param = c(TN, TN_sd),
id = "TN", cross_ids = "OC")
class(TN_UM)

OC_TN_cross_crm <- makecrm()


# "mtv" method example
a <- defineUM(TRUE, "norm", c(2, 1))
b <- defineUM(TRUE, "norm", c(20, 5))
d <- defineUM(TRUE, "norm", c(10, 3))
my_sample <- genSample(UMobject = list(a, b, d), 
varcov = matrix(c(1, 1.6, 0.2, 1.6, 4, -2.4, 0.2, -2.4, 8), nrow = 3, ncol = 3),
n = 5, samplemethod = "mvt", asList = FALSE)
my_sample

# "lhs" method example

}
\author{
Kasia Sawicka, Stefan van Dam, Gerard Heuvelink
}

